{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/line-chart/line-chart.component.css","webpack:///./src/app/line-chart/line-chart.component.html","webpack:///./src/app/line-chart/line-chart.component.ts","webpack:///./src/app/material/material.module.ts","webpack:///./src/app/models/filtro.ts","webpack:///./src/app/services/casos-covid-ce.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"mat-form-field {\\r\\n    width: 20rem;\\r\\n}\\r\\n\\r\\nmat-spinner {\\r\\n    margin: 8rem auto !important;\\r\\n}\\r\\n\\r\\n.page {\\r\\n    margin-top: 3rem;\\r\\n}\\r\\n\\r\\nnav {\\r\\n    background-color: rgb(2, 2, 56);\\r\\n}\\r\\n\\r\\n.navbar{\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n.nav_item{\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n.menu {\\r\\n    color     : aliceblue;\\r\\n    margin-top: 20px;\\r\\n}\\r\\n\\r\\n/* .menu a:hover {\\r\\n    font-size: larger;\\r\\n} */\"","module.exports = \"<mat-sidenav-container [ngStyle]='containerStyle'>\\n  <mat-sidenav [ngStyle]=\\\"sidenavStyle\\\" #sidenav [(opened)]=\\\"opened\\\" mode=\\\"over\\\">\\n    <mat-nav-list>\\n      <div class=\\\"container text-center menu\\\">\\n        <p>INDICADORES</p>\\n        <hr>\\n        <a class=\\\"nav_item\\\" mat-list-item routerLink=\\\"#\\\">Data x Quantidade</a>\\n      </div>\\n    </mat-nav-list>\\n  </mat-sidenav>\\n  <mat-sidenav-content>\\n    <nav class=\\\"navbar navbar-expand-lg navbar-dark\\\">\\n      <div style=\\\"cursor: pointer;\\\" (click)=\\\"sidenav.toggle()\\\">\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\n      </div>\\n      <div style=\\\"margin-left:1rem\\\">ICovid19-CE</div>\\n    </nav>\\n    <!-- <div class=\\\"container\\\">\\n      <router-outlet></router-outlet>\\n    </div> -->\\n    <div class=\\\"container page\\\">\\n      <div class=\\\"chart_filter\\\">\\n        <mat-form-field>\\n          <mat-label>Datas</mat-label>\\n          <mat-select [(value)]=\\\"filtro.campoData\\\">\\n            <mat-option *ngFor=\\\"let df of datasFiltro\\\" [value]=\\\"df\\\">\\n              {{df.descricao}}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <mat-label>Data Início</mat-label>\\n          <input matInput [matDatepicker]=\\\"picker1\\\" name=\\\"dataInicio\\\" [(ngModel)]=\\\"filtro.dataInicio\\\">\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #picker1></mat-datepicker>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <mat-label>Data Fim</mat-label>\\n          <input matInput [matDatepicker]=\\\"picker2\\\" name=\\\"dataFim\\\" [(ngModel)]=\\\"filtro.dataFim\\\">\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #picker2></mat-datepicker>\\n        </mat-form-field>\\n        <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!filtro.dataFim\\\" (click)=\\\"filtrar()\\\">Filtrar</button>\\n      </div>\\n      <div class=\\\"chart\\\">\\n        <div class=\\\"chart_title\\\">\\n          <div>{{filtro.campoData.descricao}}</div>\\n          <div *ngIf=\\\"filtro.dataInicio && filtro.dataFim\\\">{{filtro.dataInicio | date}} até {{filtro.dataFim | date}}</div>\\n        </div>\\n        <div class=\\\"chart_body\\\">\\n          <div *ngIf=\\\"indicadores; else elseBlock\\\">\\n            <app-line-chart *ngIf=\\\"indicadores\\\" id=\\\"1\\\" [data]=\\\"indicadores\\\"></app-line-chart>\\n          </div>\\n          <ng-template #elseBlock>\\n            <mat-spinner></mat-spinner>\\n          </ng-template>\\n        </div>\\n      </div>\\n    </div>    \\n  </mat-sidenav-content>\\n</mat-sidenav-container>\"","import { Component, OnInit } from '@angular/core';\nimport { Indices } from './models/indices';\nimport { CasosCovidCeService } from './services/casos-covid-ce.service';\nimport { Filtro } from './models/filtro';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'iCovid19';\n  casos: Array<Indices>;\n  indicadores: any[];\n  datasFiltro: any[];\n  filtro: Filtro;\n  opened:any;\n  constructor(private casosCovidService: CasosCovidCeService) {\n  }\n\n  ngOnInit(): void {\n    this.loadDatasFiltro();\n    this.filtro = new Filtro(this.datasFiltro);\n    this.loadIndicadores();\n  }\n\n  loadDatasFiltro() {\n    this.datasFiltro = [\n      { campo: 'dataEntradaUtisSvep', descricao: 'Data de entrada na UTI' },\n      { campo: 'dataEvolucaoCasoSivep', descricao: 'Data do diagnóstico de evolução' },\n      { campo: 'dataInicioSintomas', descricao: 'Data de início dos sintomas' },\n      { campo: 'dataInternacaoSivep', descricao: 'Data de início dos sintomas' },\n      { campo: 'dataNotificacao', descricao: 'Data de notificação do exame' },\n      { campo: 'dataObito', descricao: 'Data do óbito' },\n      { campo: 'dataResultadoExame', descricao: 'Data do resultado do exame' },\n      { campo: 'dataSaidaUtisSvep', descricao: 'Data de saída da UTI' },\n      { campo: 'dataSolicitacaoExame', descricao: 'Data de solicitação de exame' },\n    ];\n    //1 dataEntradaUtisSvep - Data de entrada na UTI - Data\n    //2 dataEvolucaoCasoSivep - Data do diagnóstico de evolução - Data\n    //3 dataInicioSintomas - Data de início dos sintomas - Data\n    //4 dataInternacaoSivep - Data de internação do paciente - Data\n    //5 dataNotificacao - Data de notificação do exame - Data\n    //6 dataObito - Data do óbito - Data\n    //7 dataResultadoExame - Data do resultado do exame - Data\n    //8 dataSaidaUtisSvep - Data de saída da UTI - Data\n    //9 dataSolicitacaoExame - Data de solicitação de exame - Data\n  }\n\n  loadIndicadores() {\n    let dataInicio = `${this.filtro.dataInicio.getFullYear()}-${this.filtro.dataInicio.getMonth() + 1}-${this.filtro.dataInicio.getDate()}`;\n    let dataFim = `${this.filtro.dataFim.getFullYear()}-${this.filtro.dataFim.getMonth() + 1}-${this.filtro.dataFim.getDate()}`;\n    this.casosCovidService.getCasos(dataInicio, dataFim).subscribe(res => {\n      let filtroData = this.filtro.campoData.campo;\n      this.casos = res.filter(r => r[filtroData]).sort((a, b) => b[filtroData] - a[filtroData]);\n      let datasAnteriores = new Array<any>();\n      let lista = [];\n      this.casos.forEach(c => {\n        if (datasAnteriores && !datasAnteriores.includes(c[filtroData])) {\n          var data = new Date(c[filtroData]);\n          let total = this.casos\n            .filter(e => e[filtroData] == c[filtroData])\n            .sort((a, b) => b[filtroData] - a[filtroData])\n            .length;\n\n          lista.push({ data: data, total: total });\n        }\n        datasAnteriores.push(c.dataObito);\n      });\n      this.indicadores = lista;\n    });\n  }\n\n  filtrar(){\n    this.indicadores = null;\n    this.loadIndicadores();\n  }\n\n  // stilos\n  containerStyle = {\n    'height': `${screen.height}px`\n  }\n\n  sidenavStyle = {\n    'background-color': 'rgb(2, 2, 56)',\n    'width': `200px`\n  }\n}\n","import { AppComponent } from './app.component';\nimport { MaterialModule } from './material/material.module';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { LineChartComponent } from './line-chart/line-chart.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LineChartComponent\n  ],\n  imports: [\n    MaterialModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    FormsModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div id=\\\"chartdiv_{{id}}\\\" style=\\\"width: 100%; height: 500px\\\"></div>\\n\"","import { Component, OnInit, NgZone, Input, AfterViewInit } from '@angular/core';\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport { IndicadorDataTotal } from '../models/indicadorDataTotal';\nam4core.useTheme(am4themes_animated);\n\n@Component({\n  selector: 'app-line-chart',\n  templateUrl: './line-chart.component.html',\n  styleUrls: ['./line-chart.component.css']\n})\nexport class LineChartComponent implements OnInit, AfterViewInit {\n  private chart: am4charts.XYChart;\n  @Input() id: number;\n  @Input() data: Array<IndicadorDataTotal>;\n  container: string;\n  cabecalho: string[];\n\n  constructor(private zone: NgZone) {\n  }\n\n  ngAfterViewInit() {\n    this.zone.runOutsideAngular(() => {\n      //Create chart instance\n      let chart = am4core.create(\"chartdiv_\"+this.id, am4charts.XYChart);\n      chart.dateFormatter.inputDateFormat = \"dd-MM-yyyyy\";\n\n      //Add data\n      chart.data = this.data.sort((a, b) => b.data.getTime() - a.data.getTime());\n\n      //Create axes\n      let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\n      dateAxis.startLocation = 0.5;\n      dateAxis.endLocation = 0.5;\n\n      //Create value axis\n      let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n\n      //Create series\n      let series: any = chart.series.push(new am4charts.LineSeries());\n      series.dataFields.valueY = \"total\";\n      series.dataFields.dateX = \"data\";\n      series.strokeWidth = 3;\n      series.tooltipText = \"{valueY.value}\";\n      series.fillOpacity = 0.1;\n\n      //Create a range to change stroke for values below 0\n      let range = valueAxis.createSeriesRange(series);\n      range.value = 0;\n      range.endValue = -1000;\n      range.contents.stroke = chart.colors.getIndex(4);\n      range.contents.fill = range.contents.stroke;\n      range.contents.strokeOpacity = 0.7;\n      range.contents.fillOpacity = 0.1;\n\n      //Add cursor\n      chart.cursor = new am4charts.XYCursor();\n      chart.cursor.xAxis = dateAxis;\n      chart.scrollbarX = new am4core.Scrollbar();\n\n      series.tooltip.getFillFromObject = false;\n      series.tooltip.adapter.add(\"x\", (x, target) => {\n        if (series.tooltip.tooltipDataItem.valueY < 0) {\n          series.tooltip.background.fill = chart.colors.getIndex(4);\n        }\n        else {\n          series.tooltip.background.fill = chart.colors.getIndex(0);\n        }\n        return x;\n      })\n\n      this.chart = chart;\n    });\n  }\n\n  ngOnInit() {\n    //this.container = \"chartdiv_\" + this.id;\n    console.log(this);\n  }\n\n  ngOnDestroy() {\n    this.zone.runOutsideAngular(() => {\n      if (this.chart) {\n        this.chart.dispose();\n      }\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\n\nimport {\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatBadgeModule,\n  MatIconModule,\n  MatProgressSpinnerModule,\n  MatToolbarModule,\n  MatSidenavModule,\n  MatMenuModule,\n  MatListModule,\n  MatDividerModule,\n  MatGridListModule,\n  MatExpansionModule,\n  MatTabsModule,\n  MatCardModule,\n  MatStepperModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatSelectModule,\n  MatAutocompleteModule,\n  MatCheckboxModule,\n  MatRadioModule,\n  MatDatepickerModule,\n  MatNativeDateModule,\n  MatTooltipModule,\n  MatSnackBarModule,\n  MatDialogModule,\n  MatTableModule,\n  MatSortModule,\n  MatPaginatorModule\n} from '@angular/material';\n\nconst Material = [\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatBadgeModule,\n  MatIconModule,\n  MatProgressSpinnerModule,\n  MatToolbarModule,\n  MatSidenavModule,\n  MatMenuModule,\n  MatListModule,\n  MatDividerModule,\n  MatGridListModule,\n  MatExpansionModule,\n  MatTabsModule,\n  MatCardModule,\n  MatStepperModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatSelectModule,\n  MatAutocompleteModule,\n  MatCheckboxModule,\n  MatRadioModule,\n  MatDatepickerModule,\n  MatNativeDateModule,\n  MatTooltipModule,\n  MatSnackBarModule,\n  MatDialogModule,\n  MatTableModule,\n  MatSortModule,\n  MatSidenavModule,\n  MatPaginatorModule\n];\n\n@NgModule({\n  imports: [Material],\n  exports: [Material]\n})\nexport class MaterialModule {}","import { DatasFiltro } from \"./datasFiltro\";\r\n\r\nexport class Filtro {\r\n    campoData: DatasFiltro;\r\n    dataInicio: Date;\r\n    dataFim: Date;\r\n    constructor(_campoData: DatasFiltro[]){\r\n      this.dataInicio = new Date(\"2020-03-01T03:00:00.000+0000\");\r\n      this.dataFim = new Date();\r\n      this.campoData = _campoData.filter(c=> c.campo == \"dataObito\")[0]; \r\n    }\r\n  }","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Filtro } from '../models/filtro';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CasosCovidCeService {\n    private dataPrimeiroCasoString = \"2020-03-01\";\n    private dataPrimeiroCasoDate = new Date(\"2020-03-01T03:00:00.000+0000\");\n    private api = \"https://indicadores.integrasus.saude.ce.gov.br/api/casos-coronavirus\";\n  constructor(private http: HttpClient) { }\n\n  getCasos(dataInicio: string, dataFim: string){\n    return this.http.get<any>(`${this.api}?dataInicio=${dataInicio}&dataFim=${dataFim}`);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}